#stages:
#  - triggers
#caseAjob:
#  stage: triggers
#  trigger:
#    include: caseA/.gitlab-ci.yml
#caseBjob:
#  stage: triggers
#  needs: [caseAjob]
#  trigger:
#    include: caseB/.gitlab-ci.yml

variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST_AUTH_METHOD: trust
stages:
  - test
Testing:
  stage: test
  image: debian:latest
  services:
    - postgres
  script:
    - apt update && apt install -y postgresql-client
    - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -c "\l"
  tags:
  - docker

#stages:
#    - stage1
#    - stage2
#    - stage3
#job1:
#    stage: stage1
#    script:
#        - echo "caseA - job1"
#job2:
#    stage: stage2
#    needs: [job1]
#    script:
#        - echo "caseA - job2"
#job3:
#    stage: stage3
#    needs: [job2]
#    script:
#        - echo "caseA - job3"
#stages:          # List of stages for jobs, and their order of execution
#  - build
#  - test
#  - deploy
#
#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  script:
#    - echo "Compiling the code..."
#    - echo "Compile complete."
#build-docker-job:
#  stage: build
#  script:
#    - echo "Hello world"
#    - sleep 5
#  tags:
#    - docker
#
#unit-test-job:   # This job runs in the test stage.
#  stage: test    # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests... This will take about 60 seconds."
#    - sleep 60
#    - echo "Code coverage is 90%"
#
#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#    - echo "Linting code... This will take about 10 seconds."
#    - sleep 10
#    - echo "No lint issues found."
#  tags:
#    - docker
#
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
