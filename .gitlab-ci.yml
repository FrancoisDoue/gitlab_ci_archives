#variables:
#  POSTGRES_DB: postgres
#  POSTGRES_USER: runner
#  POSTGRES_PASSWORD: postgres
#  POSTGRES_HOST_AUTH_METHOD: trust
#stages:
#  - test
#
#Testing:
#  stage: test
#  image: alpine:latest
#  services:
#    - name: postgres:15.2-alpine3.17
#      alias: mydb1
#    - name: postgres:11.16-stretch
#      alias: mydb2
#    - name: postgres:13.10-alpine
#      alias: mydb3
#  script:
#    - apk add postgresql
#    - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h mydb1 -d postgres -c "SELECT version();"
#    - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h mydb2 -d postgres -c "SELECT version();"
#    - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h mydb3 -d postgres -c "SELECT version();"
#  tags:
#    - docker

variables:
  MYSQL_DATABASE: "db_name"
  MYSQL_ROOT_PASSWORD: "dbpass"
  MYSQL_USER: "username"
  MYSQL_PASSWORD: "dbpass"
  MYSQL_HOST: mysql
stages:    
  - test
Testing:
  image: alpine:latest
  services:
    - mysql
  stage: test
  script:
    - apk add mariadb-client
    - echo "SHOW tables;" | mariadb -u root -p "$MYSQL_ROOT_PASSWORD" -h mysql "$MYSQL_DATABASE"
    - echo "CREATE TABLE test_table (field1 int);" | mariadb -u root -p "$MYSQL_ROOT_PASSWORD" -h mysql "$MYSQL_DATABASE"
    - echo "SHOW tables;" | mariadb -u root -p "$MYSQL_ROOT_PASSWORD" -h mysql "$MYSQL_DATABASE"
  tags: 
    - docker
#Testing:
#  stage: test
#  image: debian:latest
#  services:
#    - postgres
#  script:
#    - apt update && apt install -y postgresql-client
#    - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -c "\l"
#  tags:
#  - docker

#stages:
#  - triggers
#caseAjob:
#  stage: triggers
#  trigger:
#    include: caseA/.gitlab-ci.yml
#caseBjob:
#  stage: triggers
#  needs: [caseAjob]
#  trigger:
#    include: caseB/.gitlab-ci.yml

#stages:
#    - stage1
#    - stage2
#    - stage3
#job1:
#    stage: stage1
#    script:
#        - echo "caseA - job1"
#job2:
#    stage: stage2
#    needs: [job1]
#    script:
#        - echo "caseA - job2"
#job3:
#    stage: stage3
#    needs: [job2]
#    script:
#        - echo "caseA - job3"
#stages:          # List of stages for jobs, and their order of execution
#  - build
#  - test
#  - deploy
#
#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  script:
#    - echo "Compiling the code..."
#    - echo "Compile complete."
#build-docker-job:
#  stage: build
#  script:
#    - echo "Hello world"
#    - sleep 5
#  tags:
#    - docker
#

