#stages:
#  - stage1
#  - stage2
#job1:
#  stage: stage1
#  script:
#    - echo "stage1 - job1"
#job2:
#  stage: stage1
#  script:
#    - echo "stage1 - job2"
#    - exit 1
#job3:
#  stage: stage2
#  script:
#    - echo "stage2 - job3"
#job4:
#  stage: stage2
#  script:
#    - echo "stage2 - job4"

stages:
  - stage1
  - stage2
  - stage3
job1:
  stage: stage1
  script:
    - echo "stage1 - job1"
    - exit 1
job4:
  stage: stage1
  script:
    - echo "stage1 - job4"
job2:
  stage: stage2
  needs: [job1]
  script:
    - echo "stage2 - job2"
job5:
  stage: stage2
  needs: [job4]
  script:
    - echo "stage2 - job5"

#stages:          # List of stages for jobs, and their order of execution
#  - build
#  - test
#  - deploy
#
#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  script:
#    - echo "Compiling the code..."
#    - echo "Compile complete."
#build-docker-job:
#  stage: build
#  script:
#    - echo "Hello world"
#    - sleep 5
#  tags:
#    - docker
#
#unit-test-job:   # This job runs in the test stage.
#  stage: test    # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests... This will take about 60 seconds."
#    - sleep 60
#    - echo "Code coverage is 90%"
#
#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#    - echo "Linting code... This will take about 10 seconds."
#    - sleep 10
#    - echo "No lint issues found."
#  tags:
#    - docker
#
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
